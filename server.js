// Quickly generated by chatGPT
// Need modification

const express = require('express');
const mongodb = require('mongodb');

const app = express();
const port = 3000;

// Connect to MongoDB
mongodb.MongoClient.connect('mongodb://127.0.0.1:27017', { useUnifiedTopology: true }, (err, client) => {
    if (err) {
        console.log(err);
        process.exit(1);
    }

    // Get a reference to the "test" database
    const db = client.db('test');

    // Create a new document in the "test" collection
    app.post('/test', (req, res) => {
        db.collection('test').insertOne({
            name: 'John Doe'
        }, (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send({ message: 'Error inserting document' });
            } else {
                res.send(result.ops[0]);
            }
        });
    });

    // Retrieve all documents from the "test" collection
    app.get('/test', (req, res) => {
        db.collection('test').find({}).toArray((err, docs) => {
            if (err) {
                console.log(err);
                res.status(500).send({ message: 'Error retrieving documents' });
            } else {
                res.send(docs);
            }
        });
    });

    // Update a document in the "test" collection
    app.put('/test/:id', (req, res) => {
        const id = new mongodb.ObjectID(req.params.id);
        db.collection('test').updateOne({ _id: id }, { $set: { name: 'Jane Doe' } }, (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send({ message: 'Error updating document' });
            } else {
                res.send(result);
            }
        });
    });

    // Delete a document from the "test" collection
    app.delete('/test/:id', (req, res) => {
        const id = new mongodb.ObjectID(req.params.id);
        db.collection('test').deleteOne({ _id: id }, (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send({ message: 'Error deleting document' });
            } else {
                res.send(result);
            }
        });
    });

    // Start the server
    app.listen(port, () => {
        console.log(`Server listening on port ${port}`);
    });
});
